name: 构建跨平台可执行文件

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            platform: macOS
            arch: x86_64
            runner_arch: intel
            executable_suffix: ""
          - os: macos-latest
            platform: macOS
            arch: arm64
            runner_arch: apple_silicon
            executable_suffix: ""
          - os: windows-latest
            platform: Windows
            arch: x86_64
            runner_arch: x86_64
            executable_suffix: ".exe"
          - os: ubuntu-latest
            platform: Linux
            arch: x86_64
            runner_arch: x86_64
            executable_suffix: ""

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller>=5.0
        
    - name: 验证Python环境
      run: |
        python --version
        pip list

    - name: 构建可执行文件 (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name "amap-downloader" --hidden-import tkinter --hidden-import tkinter.ttk --hidden-import tkinter.messagebox --hidden-import tkinter.filedialog --hidden-import requests --hidden-import json --hidden-import pathlib --hidden-import threading --hidden-import urllib.parse --hidden-import urllib.request --hidden-import urllib.error --exclude-module matplotlib --exclude-module numpy --exclude-module pandas --exclude-module scipy --exclude-module PIL --exclude-module cv2 --exclude-module tensorflow --exclude-module torch --exclude-module jupyter --exclude-module IPython --add-data "config_example.py;." --add-data "使用说明.md;." map_downloader_gui.py

    - name: 构建可执行文件 (macOS Intel)
      if: matrix.os == 'macos-13'
      run: |
        # macOS Intel (x86_64) 构建
        echo "构建 macOS Intel (x86_64) 版本"
        pyinstaller --onefile --windowed --name "amap-downloader" \
          --target-arch x86_64 \
          --hidden-import tkinter \
          --hidden-import tkinter.ttk \
          --hidden-import tkinter.messagebox \
          --hidden-import tkinter.filedialog \
          --hidden-import requests \
          --hidden-import json \
          --hidden-import pathlib \
          --hidden-import threading \
          --hidden-import urllib.parse \
          --hidden-import urllib.request \
          --hidden-import urllib.error \
          --hidden-import ssl \
          --hidden-import certifi \
          --hidden-import charset_normalizer \
          --hidden-import idna \
          --exclude-module matplotlib \
          --exclude-module numpy \
          --exclude-module pandas \
          --exclude-module scipy \
          --exclude-module PIL \
          --exclude-module cv2 \
          --exclude-module tensorflow \
          --exclude-module torch \
          --exclude-module jupyter \
          --exclude-module IPython \
          --add-data "config_example.py:." \
          --add-data "使用说明.md:." \
          --osx-bundle-identifier "com.amapdownloader.app" \
          --codesign-identity "-" \
          map_downloader_gui.py

    - name: 构建可执行文件 (macOS Apple Silicon)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS Apple Silicon (arm64) 构建
        echo "构建 macOS Apple Silicon (arm64) 版本"
        pyinstaller --onefile --windowed --name "amap-downloader" \
          --target-arch arm64 \
          --hidden-import tkinter \
          --hidden-import tkinter.ttk \
          --hidden-import tkinter.messagebox \
          --hidden-import tkinter.filedialog \
          --hidden-import requests \
          --hidden-import json \
          --hidden-import pathlib \
          --hidden-import threading \
          --hidden-import urllib.parse \
          --hidden-import urllib.request \
          --hidden-import urllib.error \
          --hidden-import ssl \
          --hidden-import certifi \
          --hidden-import charset_normalizer \
          --hidden-import idna \
          --exclude-module matplotlib \
          --exclude-module numpy \
          --exclude-module pandas \
          --exclude-module scipy \
          --exclude-module PIL \
          --exclude-module cv2 \
          --exclude-module tensorflow \
          --exclude-module torch \
          --exclude-module jupyter \
          --exclude-module IPython \
          --add-data "config_example.py:." \
          --add-data "使用说明.md:." \
          --osx-bundle-identifier "com.amapdownloader.app" \
          --codesign-identity "-" \
          map_downloader_gui.py

    - name: 设置macOS可执行文件权限
      if: startsWith(matrix.os, 'macos')
      run: |
        cd dist
        chmod +x amap-downloader
        echo "设置macOS可执行文件权限完成"
        echo "文件架构信息："
        file amap-downloader
        ls -la amap-downloader

    - name: 构建可执行文件 (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --windowed --name "amap-downloader" \
          --hidden-import tkinter \
          --hidden-import tkinter.ttk \
          --hidden-import tkinter.messagebox \
          --hidden-import tkinter.filedialog \
          --hidden-import requests \
          --hidden-import json \
          --hidden-import pathlib \
          --hidden-import threading \
          --hidden-import urllib.parse \
          --hidden-import urllib.request \
          --hidden-import urllib.error \
          --exclude-module matplotlib \
          --exclude-module numpy \
          --exclude-module pandas \
          --exclude-module scipy \
          --exclude-module PIL \
          --exclude-module cv2 \
          --exclude-module tensorflow \
          --exclude-module torch \
          --exclude-module jupyter \
          --exclude-module IPython \
          --add-data "config_example.py:." \
          --add-data "使用说明.md:." \
          map_downloader_gui.py

    - name: 重命名可执行文件
      shell: bash
      run: |
        cd dist
        echo "构建产物列表："
        ls -la
        
        # 设置目标文件名
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          target_name="amap-downloader_${{ matrix.platform }}_${{ matrix.arch }}.exe"
          # 查找.exe文件并重命名
          if [ -f "amap-downloader.exe" ]; then
            echo "找到可执行文件: amap-downloader.exe"
            mv "amap-downloader.exe" "$target_name"
            echo "重命名为: $target_name"
          else
            echo "错误：未找到 amap-downloader.exe"
            ls -la
            exit 1
          fi
        else
          # 为macOS添加架构后缀以区分Intel和Apple Silicon版本
          if [ "${{ matrix.platform }}" = "macOS" ]; then
            if [ "${{ matrix.arch }}" = "x86_64" ]; then
              target_name="amap-downloader_${{ matrix.platform }}_Intel"
            else
              target_name="amap-downloader_${{ matrix.platform }}_AppleSilicon"
            fi
          else
            target_name="amap-downloader_${{ matrix.platform }}_${{ matrix.arch }}"
          fi
          
          # 查找可执行文件并重命名
          if [ -f "amap-downloader" ]; then
            echo "找到可执行文件: amap-downloader"
            mv "amap-downloader" "$target_name"
            echo "重命名为: $target_name"
          else
            echo "错误：未找到 amap-downloader"
            ls -la
            exit 1
          fi
        fi
        
        echo "重命名后的文件："
        ls -la

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: amap-downloader-${{ matrix.platform }}-${{ matrix.runner_arch }}
        path: dist/amap-downloader_*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: 下载所有构建产物
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        
    - name: 列出下载的文件
      run: ls -la
      
    - name: 创建发布
      uses: softprops/action-gh-release@v1
      with:
        name: 高德地图下载器 ${{ github.ref_name }}
        body: |
          ## 高德地图下载器 ${{ github.ref_name }}
          
          ### 📦 下载说明
          - **Windows用户**: 下载 `amap-downloader_Windows_x86_64.exe`
          - **macOS Intel用户**: 下载 `amap-downloader_macOS_Intel`
          - **macOS Apple Silicon用户**: 下载 `amap-downloader_macOS_AppleSilicon`
          - **Linux用户**: 下载 `amap-downloader_Linux_x86_64`
          
          ### 🚀 使用方法
          1. 下载对应平台的可执行文件
          2. 双击运行（macOS/Linux用户可能需要先添加执行权限）
          3. 按照界面提示进行操作
          
          ### 📋 更新内容
          详细更新内容请查看下方的自动生成说明。
        files: |
          amap-downloader_macOS_Intel
          amap-downloader_macOS_AppleSilicon
          amap-downloader_Windows_x86_64.exe
          amap-downloader_Linux_x86_64
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}